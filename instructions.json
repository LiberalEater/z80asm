{
  "instructions": [
    {
      "name": "adc a, (hl)",
      "description": "`a = a + (hl) + carry`",
      "tstates": 7,
      "bytes": 1,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Set if carry from bit 3",
        "c": "Set if carry from bit 7",
        "pv": "Set if overflow"
      }
    },
    {
      "name": "adc a, (ix/y+d)",
      "description": "`a = a + (ix/y+d) + carry`",
      "tstates": 19,
      "bytes": 3,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Set if carry from bit 3",
        "c": "Set if carry from bit 7",
        "pv": "Set if overflow"
      }
    },
    {
      "name": "adc a, n",
      "description": "`a = a + n + carry`",
      "tstates": 7,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Set if carry from bit 3",
        "c": "Set if carry from bit 7",
        "pv": "Set if overflow"
      }
    },
    {
      "name": "adc a, r8",
      "description": "`a = a + r8 + carry`",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Set if carry from bit 3",
        "c": "Set if carry from bit 7",
        "pv": "Set if overflow"
      }
    },
    {
      "name": "adc hl, r16",
      "description": "`hl = hl + r16 + carry`",
      "tstates": 15,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Set if carry from bit 11",
        "c": "Set if carry from bit MSB",
        "pv": "Set if overflow"
      }
    },
    {
      "name": "adc hl, sp",
      "description": "`hl = hl + sp + carry`",
      "tstates": 15,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Set if carry from bit 11",
        "c": "Set if carry from bit MSB",
        "pv": "Set if overflow"
      }
    },
    {
      "name": "add a, (hl)",
      "description": "`a = a + (hl)`",
      "tstates": 7,
      "bytes": 1,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Set if carry from bit 3",
        "c": "Set if carry from bit 7",
        "pv": "Set if overflow"
      }
    },
    {
      "name": "add a, (ix/y+d)",
      "description": "`a = a + (ix/y+d)`",
      "tstates": 19,
      "bytes": 3,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Set if carry from bit 3",
        "c": "Set if carry from bit 7",
        "pv": "Set if overflow"
      }
    },
    {
      "name": "add a, n",
      "description": "`a = a + n`",
      "tstates": 7,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Set if carry from bit 3",
        "c": "Set if carry from bit 7",
        "pv": "Set if overflow"
      }
    },
    {
      "name": "add a, r8",
      "description": "`a = a + r8`",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Set if carry from bit 3",
        "c": "Set if carry from bit 7",
        "pv": "Set if overflow"
      }
    },
    {
      "name": "add hl, r16",
      "description": "`hl = hl + r16`",
      "tstates": 11,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Reset",
        "h": "Set if carry from bit 11",
        "c": "Set if carry from MSB",
        "pv": "Not affected"
      }
    },
    {
      "name": "add hl, sp",
      "description": "`hl = hl + sp`",
      "tstates": 11,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Reset",
        "h": "Set if carry from bit 11",
        "c": "Set if carry from bit MSB",
        "pv": "Not affected"
      }
    },
    {
      "name": "add ix/y, rxy",
      "description": "`ix/y = ix/y + rxy`",
      "tstates": 15,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Reset",
        "h": "Set if carry from bit 11",
        "c": "Set if carry from bit MSB",
        "pv": "Not affected"
      }
    },
    {
      "name": "add ix/y, sp",
      "description": "`ix/y = ix/y + sp`",
      "tstates": 15,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Reset",
        "h": "Set if carry from bit 11",
        "c": "Set if carry from MSB",
        "pv": "Not affected"
      }
    },
    {
      "name": "and a, (hl)",
      "description": "`a = a AND (hl)`",
      "tstates": 7,
      "bytes": 1,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Set",
        "c": "Set if parity is even",
        "pv": "Reset"
      }
    },
    {
      "name": "and a, (ix/y+d)",
      "description": "`a = a AND (ix/y+d)`",
      "tstates": 19,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Set",
        "c": "Set if parity is even",
        "pv": "Reset"
      }
    },
    {
      "name": "and a, n",
      "description": "`a = a AND n`",
      "tstates": 7,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Set",
        "c": "Set if parity is even",
        "pv": "Reset"
      }
    },
    {
      "name": "and a, r8",
      "description": "`a = a AND r8`",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Set",
        "c": "Set if parity is even",
        "pv": "Reset"
      }
    },
    {
      "name": "bit bit, (hl)",
      "description": "`Z = ~(hl)[bit]`",
      "tstates": 12,
      "bytes": 2,
      "flags": {
        "z": "Set if bit is 0",
        "n": "Reset",
        "h": "Set",
        "c": "Not affected",
        "pv": "Undefined"
      }
    },
    {
      "name": "bit bit, (ix/y+d)",
      "description": "`Z = ~(ix/y+d)[bit]`",
      "tstates": 23,
      "bytes": 4,
      "flags": {
        "z": "Set if bit is 0",
        "n": "Reset",
        "h": "Set",
        "c": "Not affected",
        "pv": "Undefined"
      }
    },
    {
      "name": "bit bit, r8",
      "description": "`Z = ~r8[bit]`",
      "tstates": 8,
      "bytes": 2,
      "flags": {
        "z": "Set if bit is 0",
        "n": "Reset",
        "h": "Set",
        "c": "Not affected",
        "pv": "Undefined"
      }
    },
    {
      "name": "call cc, mn",
      "description": "If cc is true, push return address and set pc to mn",
      "tstates": "10/17",
      "bytes": 3,
      "flags": {}
    },
    {
      "name": "call mn",
      "description": "Push return address and set pc to mn",
      "tstates": 17,
      "bytes": 3,
      "flags": {}
    },
    {
      "name": "ccf",
      "description": "`C = ~C`",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Reset",
        "h": "Previous carry",
        "c": "Set if carry was 0",
        "pv": "Not affected"
      }
    },
    {
      "name": "cp a, (hl)",
      "description": "`a - (hl)`",
      "tstates": 7,
      "bytes": 1,
      "flags": {
        "z": "Set if a = (hl)",
        "n": "Set",
        "h": "Set if borrow from bit 4",
        "c": "Set if borrow",
        "pv": "Set if overflow"
      }
    },
    {
      "name": "cp a, (ix/y+d)",
      "description": "`a - (ix/y+d)`",
      "tstates": 19,
      "bytes": 3,
      "flags": {
        "z": "Set if a = (ix/y+d)",
        "n": "Set",
        "h": "Set if borrow from bit 4",
        "c": "Set if borrow",
        "pv": "Set if overflow"
      }
    },
    {
      "name": "cp a, n",
      "description": "`a - n`",
      "tstates": 7,
      "bytes": 2,
      "flags": {
        "z": "Set if a = n",
        "n": "Set",
        "h": "Set if borrow from bit 4",
        "c": "Set if borrow",
        "pv": "Set if overflow"
      }
    },
    {
      "name": "cp a, r8",
      "description": "`a - r8`",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Set if a = r8",
        "n": "Set",
        "h": "Set if borrow from bit 4",
        "c": "Set if borrow",
        "pv": "Set if overflow"
      }
    },
    {
      "name": "cpd",
      "description": "`a - (hl), hl = hl - 1, bc = bc - 1`",
      "tstates": 16,
      "bytes": 2,
      "flags": {
        "z": "Set if a = (hl)",
        "n": "Set",
        "h": "Set if borrow from bit 4",
        "c": "Not affected",
        "pv": "Set if bc - 1 != 0"
      }
    },
    {
      "name": "cpdr",
      "description": "`a - (hl), hl = hl - 1, bc = bc - 1` repeat until a=(hl) or bc = 0",
      "tstates": "16/21",
      "bytes": 2,
      "flags": {
        "z": "Set if a = (hl)",
        "n": "Set",
        "h": "Set if borrow from bit 4",
        "c": "Not affected",
        "pv": "Set if bc - 1 != 0"
      }
    },
    {
      "name": "cpi",
      "description": "`a - (hl), hl = hl + 1, bc = bc - 1`",
      "tstates": 16,
      "bytes": 2,
      "flags": {
        "z": "Set if a = (hl)",
        "n": "Set",
        "h": "Set if borrow from bit 4",
        "c": "Not affected",
        "pv": "Set if bc - 1 != 0"
      }
    },
    {
      "name": "cpir",
      "description": "`a - (hl), hl = hl + 1, bc = bc - 1` repeat until a=(hl) or bc = 0",
      "tstates": "16/21",
      "bytes": 2,
      "flags": {
        "z": "Set if a = (hl)",
        "n": "Set",
        "h": "Set if borrow from bit 4",
        "c": "Not affected",
        "pv": "Set if bc - 1 != 0"
      }
    },
    {
      "name": "cpl",
      "description": "`a = ~a`",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Set",
        "h": "Set",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "daa",
      "description": "Decimal adjust A, see full documentation",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Set if result is 0",
        "n": "Not affected",
        "h": "See documentation",
        "c": "See documentation",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "dec (hl)",
      "description": "`(hl) = (hl) - 1`",
      "tstates": 11,
      "bytes": 1,
      "flags": {
        "z": "Set if result is 0",
        "n": "Set",
        "h": "Set if borrow from bit 4",
        "c": "Not affected",
        "pv": "Set if operand was 80h"
      }
    },
    {
      "name": "dec ix/y",
      "description": "`ix/y = ix/y - 1`",
      "tstates": 10,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "dec (ix/y+d)",
      "description": "`(ix/y+d) = (ix/y+d) - 1`",
      "tstates": 23,
      "bytes": 3,
      "flags": {
        "z": "Set if result is 0",
        "n": "Set",
        "h": "Set if borrow from bit 4",
        "c": "Not affected",
        "pv": "Set if operand was 80h"
      }
    },
    {
      "name": "dec r8",
      "description": "`r8 = r8 - 1`",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Set if result is 0",
        "n": "Set",
        "h": "Set if borrow from bit 4",
        "c": "Not affected",
        "pv": "Set if operand was 80h"
      }
    },
    {
      "name": "dec r16",
      "description": "`r16 = r16 - 1`",
      "tstates": 6,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "dec sp",
      "description": "`sp = sp - 1`",
      "tstates": 6,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "di",
      "description": "Disable interrupts",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "djnz mn",
      "description": "`b = b - 1` jump to mn, repeat until b = 0",
      "tstates": "8/13",
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ei",
      "description": "enable interrupts",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ex af, af'",
      "description": "`af <-> af'`",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Taken from f'",
        "n": "Taken from f'",
        "h": "Taken from f'",
        "c": "Taken from f'",
        "pv": "Taken from f'"
      }
    },
    {
      "name": "ex de, hl",
      "description": "`de <-> hl`",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ex (sp), hl",
      "description": "`(sp) <-> hl`",
      "tstates": 19,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ex (sp), ix/y",
      "description": "`(sp) <-> ix/y`",
      "tstates": 23,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "exx",
      "description": "`bc <-> bc',de <-> de',hl <-> hl'`",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "halt",
      "description": "Suspends CPU until interrupt or reset",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "im n",
      "description": "Sets interrupt mode (0,1, or 2)",
      "tstates": "8 or 4 if n = 2",
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "in a, (n)",
      "description": "`a = ({n})`",
      "tstates": 11,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "in r8, (c)",
      "description": "`r8 = ({c})`",
      "tstates": 12,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Not affected",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "inc (hl)",
      "description": "`(hl) = (hl) + 1`",
      "tstates": 11,
      "bytes": 1,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Set if carry from bit 3",
        "c": "Not affected",
        "pv": "Set if operand was 7Fh"
      }
    },
    {
      "name": "inc ix/y",
      "description": "`ix/y = ix/y + 1`",
      "tstates": 10,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "inc (ix/y+d)",
      "description": "`(ix/y+d) = (ix/y+d) + 1`",
      "tstates": 23,
      "bytes": 3,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Set if carry from bit 3",
        "c": "Not affected",
        "pv": "Set if operand was 7Fh"
      }
    },
    {
      "name": "inc r8",
      "description": "`r8 = r8 + 1`",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Set if carry from bit 3",
        "c": "Not affected",
        "pv": "Set if operand was 7Fh"
      }
    },
    {
      "name": "inc r16",
      "description": "`r16 = r16 + 1`",
      "tstates": 6,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "inc sp",
      "description": "`sp = sp + 1`",
      "tstates": 1,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ind",
      "description": "`(hl) = ({c}), b = b - 1, hl = hl - 1`",
      "tstates": 16,
      "bytes": 2,
      "flags": {
        "z": "Set if b - 1 = 0",
        "n": "Set",
        "h": "Undefined",
        "c": "Not affected",
        "pv": "Undefined"
      }
    },
    {
      "name": "indr",
      "description": "`(hl) = ({c}), b = b - 1, hl = hl - 1` repeat until b = 0",
      "tstates": "16/21",
      "bytes": 2,
      "flags": {
        "z": "Set",
        "n": "Set",
        "h": "Undefined",
        "c": "Not affected",
        "pv": "Undefined"
      }
    },
    {
      "name": "ini",
      "description": "`(hl) = ({c}), b = b - 1, hl = hl + 1`",
      "tstates": 16,
      "bytes": 2,
      "flags": {
        "z": "Set if b - 1 = 0",
        "n": "Set",
        "h": "Undefined",
        "c": "Not affected",
        "pv": "Undefined"
      }
    },
    {
      "name": "inir",
      "description": "`(hl) = ({uu, b, c}), b = b - 1, hl = hl + 1` repeat until b = 0",
      "tstates": "16/21",
      "bytes": 2,
      "flags": {
        "z": "Set",
        "n": "Set",
        "h": "Undefined",
        "c": "Not affected",
        "pv": "Undefined"
      }
    },
    {
      "name": "jp cc, mn",
      "description": "`pc = mn` if cc is true",
      "tstates": 10,
      "bytes": 3,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "jp mn",
      "description": "`pc = mn`",
      "tstates": 10,
      "bytes": 3,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "jr cc, mn",
      "description": "`pc = pc + d` if cc' is true, d is a range from -128 to 127",
      "tstates": "7/12",
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "jr mn",
      "description": "`pc = pc + d` d is a range from -128 to 127",
      "tstates": 12,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld a, i",
      "description": "`a = i`",
      "tstates": 9,
      "bytes": 2,
      "flags": {
        "z": "Set if i is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Not affected",
        "pv": "Contains contents of iff2"
      }
    },
    {
      "name": "ld a, (mn)",
      "description": "`a = (Mn)`",
      "tstates": 13,
      "bytes": 3,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld a, r",
      "description": "`a = R`",
      "tstates": 9,
      "bytes": 2,
      "flags": {
        "z": "Set if R is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Not affected",
        "pv": "Contains contents of iff2"
      }
    },
    {
      "name": "ld a, (r16)",
      "description": "`a = (r16)`",
      "tstates": 7,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld hl, (mn)",
      "description": "`hl = (mn)`",
      "tstates": 16,
      "bytes": 3,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld (hl), n",
      "description": "`(hl) = n`",
      "tstates": 10,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld (hl), r8",
      "description": "`(hl) = r8`",
      "tstates": 7,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld i, a",
      "description": "`i = a`",
      "tstates": 9,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld ix/y, mn",
      "description": "`ix/y = Mn`",
      "tstates": 14,
      "bytes": 4,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld ix/y, (mn)",
      "description": "`ix/y = (mn)`",
      "tstates": 20,
      "bytes": 4,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld (ix/y+d), n",
      "description": "`(ix/y+d) = n`",
      "tstates": 19,
      "bytes": 4,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld (ix/y+d), r8",
      "description": "`(ix/y+d) = r8`",
      "tstates": 19,
      "bytes": 3,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld (mn), a",
      "description": "`(Mn) = a`",
      "tstates": 13,
      "bytes": 3,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld (mn), ix/y",
      "description": "`(Mn) = ix/y`",
      "tstates": 20,
      "bytes": 4,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld (mn), hl",
      "description": "`(Mn) = hl`",
      "tstates": 16,
      "bytes": 3,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld (mn), r16",
      "description": "`(Mn) = r16`",
      "tstates": 20,
      "bytes": 4,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld (mn), sp",
      "description": "`(Mn) = sp`",
      "tstates": 20,
      "bytes": 4,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld r, a",
      "description": "`R = a`",
      "tstates": 9,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld r8, (hl)",
      "description": "`r8 = (hl)`",
      "tstates": 7,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld r8, (ix/y+d)",
      "description": "`r8 = (ix/y+d)`",
      "tstates": 19,
      "bytes": 3,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld r8, n",
      "description": "`r8 = n`",
      "tstates": 7,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld r8, r8",
      "description": "`r8 = r8`",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld r16, mn",
      "description": "`r16 = Mn`",
      "tstates": 10,
      "bytes": 3,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld r16, (mn)",
      "description": "`r16 = (Mn)`",
      "tstates": 20,
      "bytes": 4,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld (r16), a",
      "description": "`(r16) = a`",
      "tstates": 7,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld sp, hl",
      "description": "`sp = hl`",
      "tstates": 6,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld sp, ix/y",
      "description": "`sp = ix/y`",
      "tstates": 10,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld sp, mn",
      "description": "`sp = Mn`",
      "tstates": 10,
      "bytes": 3,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ld sp, (mn)",
      "description": "`sp = (Mn)`",
      "tstates": 20,
      "bytes": 4,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ldd",
      "description": "`(de) = (hl), bc = bc - 1, de = de - 1, hl = hl - 1`",
      "tstates": 16,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Reset",
        "h": "Reset",
        "c": "Not affected",
        "pv": "Set if bc - 1 != 0"
      }
    },
    {
      "name": "lddr",
      "description": "`(de) = (hl), bc = bc - 1, de = de - 1, hl = hl - 1` repeat until bc = 0",
      "tstates": "16/21",
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Reset",
        "h": "Reset",
        "c": "Not affected",
        "pv": "Reset"
      }
    },
    {
      "name": "ldi",
      "description": "`(de) = (hl), bc = bc - 1, de = de + 1, hl = hl + 1`",
      "tstates": 16,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Reset",
        "h": "Reset",
        "c": "Not affected",
        "pv": "Set if bc - 1 != 0"
      }
    },
    {
      "name": "ldir",
      "description": "`(de) = (hl), bc = bc - 1, de = de + 1, hl = hl + 1` repeat until bc = 0",
      "tstates": "16/21",
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Reset",
        "h": "Reset",
        "c": "Not affected",
        "pv": "Reset"
      }
    },
    {
      "name": "neg",
      "description": "`a = 0 - a`",
      "tstates": 8,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Set",
        "h": "Set if borrow from bit 4",
        "c": "Set if accumulator was not 0",
        "pv": "Set if operand was 80h"
      }
    },
    {
      "name": "nop",
      "description": "No operation",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "or a, (hl)",
      "description": "`a = a OR (hl)`",
      "tstates": 7,
      "bytes": 1,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Reset",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "or a, (ix/y+d)",
      "description": "`a = a OR (ix/y+d)`",
      "tstates": 19,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Reset",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "or a, n",
      "description": "`a = a OR n`",
      "tstates": 7,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Reset",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "or a, r8",
      "description": "`a = a OR r8`",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Reset",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "otdr",
      "description": "`({c}) = (hl), b = b - 1, hl = hl - 1` repeat until b = 0",
      "tstates": "16/21",
      "bytes": 2,
      "flags": {
        "z": "Set",
        "n": "Set",
        "h": "Undefined",
        "c": "Not affected",
        "pv": "Undefined"
      }
    },
    {
      "name": "otir",
      "description": "`({c}) = (hl), b = b - 1, hl = hl + 1` repeat until b = 0",
      "tstates": "16/21",
      "bytes": 2,
      "flags": {
        "z": "Set",
        "n": "Set",
        "h": "Undefined",
        "c": "Not affected",
        "pv": "Undefined"
      }
    },
    {
      "name": "out (c), r8",
      "description": "`({c}) = r8",
      "tstates": 12,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "out (n), a",
      "description": "`({n}) = a",
      "tstates": 11,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "outd",
      "description": "`({c}) = (hl), b = b - 1, hl = hl - 1`",
      "tstates": 16,
      "bytes": 2,
      "flags": {
        "z": "Set",
        "n": "Set",
        "h": "Undefined",
        "c": "Not affected",
        "pv": "Undefined"
      }
    },
    {
      "name": "outi",
      "description": "`({c}) = (hl), b = b - 1, hl = hl + 1`",
      "tstates": 16,
      "bytes": 2,
      "flags": {
        "z": "Set",
        "n": "Set",
        "h": "Undefined",
        "c": "Not affected",
        "pv": "Undefined"
      }
    },
    {
      "name": "pop af",
      "description": "Pops top of stack into `af`",
      "tstates": 10,
      "bytes": 1,
      "flags": {
        "z": "Taken from new f",
        "n": "Taken from new f",
        "h": "Taken from new f",
        "c": "Taken from new f",
        "pv": "Taken from new f"
      }
    },
    {
      "name": "pop ix/y",
      "description": "Pops top of stack into `ix/y`",
      "tstates": 14,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "pop r16",
      "description": "Pops top of stack into `r16`",
      "tstates": 10,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "push af",
      "description": "Pushes `af` to top of stack",
      "tstates": 11,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "push ix/y",
      "description": "Pushes `ix/y` to top of stack",
      "tstates": 15,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "push r16",
      "description": "Pushes `r16` to top of stack",
      "tstates": 11,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "res bit, (hl)",
      "description": "`(hl)[bit] = 0`",
      "tstates": 15,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "res bit, (ix/y+d)",
      "description": "`(ix/y+d)[bit] = 0`",
      "tstates": 23,
      "bytes": 4,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "res bit, r8",
      "description": "`r8[bit] = 0`",
      "tstates": 8,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ret",
      "description": "`pc = (sp)`",
      "tstates": 10,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "ret cc",
      "description": "`pc = (sp)` if cc is true",
      "tstates": "5/11",
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "reti",
      "description": "`pc = (sp)`",
      "tstates": 14,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "retn",
      "description": "`pc = (sp), ief1 = ief2`",
      "tstates": 14,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "rl (hl)",
      "description": "rotate left, carry to bit 0, bit 7 to carry",
      "tstates": 15,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 7",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "rl (ix/y+d)",
      "description": "rotate left, carry to bit 0, bit 7 to carry",
      "tstates": 23,
      "bytes": 4,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 7",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "rl r8",
      "description": "rotate left, carry to bit 0, bit 7 to carry",
      "tstates": 8,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 7",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "rla",
      "description": "rotate left accumulator, carry to bit 0, bit 7 to carry",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 7",
        "pv": "Not affected"
      }
    },
    {
      "name": "rlc (hl)",
      "description": "rotate left with carry, bit 7 to carry and bit 0",
      "tstates": 15,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 7",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "rlc (ix/y+d)",
      "description": "rotate left with carry, bit 7 to carry and bit 0",
      "tstates": 23,
      "bytes": 4,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 7",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "rlc r8",
      "description": "rotate left with carry, bit 7 to carry and bit 0",
      "tstates": 8,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 7",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "rlca",
      "description": "rotate left with carry-accumulator, bit 7 to carry and bit 0",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 7",
        "pv": "Not affected"
      }
    },
    {
      "name": "rld",
      "description": "`a[3:0] = (hl)[7:4], (hl)[7:4] = (hl)[3:0], (hl)[3:0} = a[3:0]`",
      "tstates": 18,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Not affected",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "rr (hl)",
      "description": "rotate right, carry to bit 7, bit 0 to carry",
      "tstates": 15,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 0",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "rr (ix/y+d)",
      "description": "rotate right, carry to bit 7, bit 0 to carry",
      "tstates": 23,
      "bytes": 4,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 0",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "rr r8",
      "description": "rotate right, carry to bit 7, bit 0 to carry",
      "tstates": 8,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 0",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "rra",
      "description": "rotate right accumulator, carry to bit 7, bit 0 to carry",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 0",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "rrc (hl)",
      "description": "rotate right carry, bit 0 to carry and bit 7",
      "tstates": 15,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 0",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "rrc (ix/y+d)",
      "description": "rotate right carry, bit 0 to carry and bit 7",
      "tstates": 23,
      "bytes": 4,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 0",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "rrc r8",
      "description": "rotate right carry, bit 0 to carry and bit 7",
      "tstates": 8,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 0",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "rrca",
      "description": "rotate right carry-accumulator, bit 0 to carry and bit 7",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 0",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "rrd",
      "description": "`a[3:0] = (hl)[3:0], (hl)[7:4] = a[3:0], (hl)[3:0] = (hl)[7:4]`",
      "tstates": 18,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Not affected",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "rst n",
      "description": "`pc is pushed, pc = {0, n}`",
      "tstates": 11,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "sbc a, (hl)",
      "description": "`a = a - (hl) - carry`",
      "tstates": 7,
      "bytes": 1,
      "flags": {
        "z": "Set if result is 0",
        "n": "Set",
        "h": "Set if borrow from bit 4",
        "c": "Set if borrow",
        "pv": "Set if overflow"
      }
    },
    {
      "name": "sbc a, (ix/y+d)",
      "description": "`a = a - (ix/y+d) - carry`",
      "tstates": 19,
      "bytes": 3,
      "flags": {
        "z": "Set if result is 0",
        "n": "Set",
        "h": "Set if borrow from bit 4",
        "c": "Set if borrow",
        "pv": "Set if overflow"
      }
    },
    {
      "name": "sbc a, n",
      "description": "`a = a - n - carry`",
      "tstates": 7,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Set",
        "h": "Set if borrow from bit 4",
        "c": "Set if borrow",
        "pv": "Set if overflow"
      }
    },
    {
      "name": "sbc a, r8",
      "description": "`a = a - r8 - carry`",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Set if result is 0",
        "n": "Set",
        "h": "Set if borrow from bit 4",
        "c": "Set if borrow",
        "pv": "Set if overflow"
      }
    },
    {
      "name": "sbc hl, r16",
      "description": "`hl = hl - r16 - carry`",
      "tstates": 15,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Set",
        "h": "Set if borrow from bit 12",
        "c": "Set if borrow",
        "pv": "Set if overflow"
      }
    },
    {
      "name": "sbc hl, sp",
      "description": "`hl = hl - sp - carry`",
      "tstates": 15,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Set",
        "h": "Set if borrow from bit 12",
        "c": "Set if borrow",
        "pv": "Set if overflow"
      }
    },
    {
      "name": "scf",
      "description": "`C = 1`",
      "tstates": 4,
      "bytes": 1,
      "flags": {
        "z": "Not affected",
        "n": "Reset",
        "h": "Reset",
        "c": "Set",
        "pv": "Not affected"
      }
    },
    {
      "name": "set bit, (hl)",
      "description": "`(hl)[bit] = 1`",
      "tstates": 15,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "set bit, (ix/y+d)",
      "description": "`(ix/y+d)[bit] = 1`",
      "tstates": 23,
      "bytes": 4,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "set bit, r8",
      "description": "`r8[bit] = 1`",
      "tstates": 8,
      "bytes": 2,
      "flags": {
        "z": "Not affected",
        "n": "Not affected",
        "h": "Not affected",
        "c": "Not affected",
        "pv": "Not affected"
      }
    },
    {
      "name": "sla (hl)",
      "description": "Shift left arithmetic, bit 7 to carry, 0 to bit 0",
      "tstates": 15,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 7",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "sla (ix/y+d)",
      "description": "Shift left arithmetic, bit 7 to carry, 0 to bit 0",
      "tstates": 23,
      "bytes": 4,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 7",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "sla r8",
      "description": "Shift left arithmetic, bit 7 to carry, 0 to bit 0",
      "tstates": 8,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 7",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "sra (hl)",
      "description": "Shift right arithmetic, bit 7 to bit 7, bit 0 to carry",
      "tstates": 15,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 0",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "sra (ix/y+d)",
      "description": "Shift right arithmetic, bit 7 to bit 7, bit 0 to carry",
      "tstates": 23,
      "bytes": 4,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 0",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "sra r8",
      "description": "Shift right arithmetic, bit 7 to bit 7, bit 0 to carry",
      "tstates": 8,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 0",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "srl (hl)",
      "description": "Shift right logical, 0 to bit 7, bit 0 to carry",
      "tstates": 15,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 0",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "srl (ix/y+d)",
      "description": "Shift right logical, 0 to bit 7, bit 0 to carry",
      "tstates": 23,
      "bytes": 4,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 0",
        "pv": "Set if parity is even"
      }
    },
    {
      "name": "srl r8",
      "description": "Shift right logical, 0 to bit 7, bit 0 to carry",
      "tstates": 8,
      "bytes": 2,
      "flags": {
        "z": "Set if result is 0",
        "n": "Reset",
        "h": "Reset",
        "c": "Becomes bit 0",
        "pv": "Set if parity is even"
      }
    },
    {
      "name" : "sub a, (hl)",
      "description" : "`a = a - (hl)`",
      "tstates" : 7,
      "bytes" : 2,
      "flags" : {
        "z" : "Set if result is 0",
        "n" : "Set",
        "h" : "Set if borrow from bit 4",
        "c" : "Set if borrow",
        "pv": "Set if overflow"
      }
    },
    {
      "name" : "sub a, (ix/y+d)",
      "description" : "`a = a - (ix/y+d)`",
      "tstates" : 19,
      "bytes" : 3,
      "flags" : {
        "z" : "Set if result is 0",
        "n" : "Set",
        "h" : "Set if borrow from bit 4",
        "c" : "Set if borrow",
        "pv": "Set if overflow"
      }
    },
    {
      "name" : "sub a, n",
      "description" : "`a = a - n`",
      "tstates" : 7,
      "bytes" : 2,
      "flags" : {
        "z" : "Set if result is 0",
        "n" : "Set",
        "h" : "Set if borrow from bit 4",
        "c" : "Set if borrow",
        "pv": "Set if overflow"
      }
    },
    {
      "name" : "sub a, r8",
      "description" : "`a = a - r8`",
      "tstates" : 4,
      "bytes" : 1,
      "flags" : {
        "z" : "Set if result is 0",
        "n" : "Set",
        "h" : "Set if borrow from bit 4",
        "c" : "Set if borrow",
        "pv": "Set if overflow"
      }
    },
    {
      "name" : "xor a, (hl)",
      "description" : "`a = a XOR (hl)`",
      "tstates" : 7,
      "bytes" : 1,
      "flags" : {
        "z" : "Set if result is 0",
        "n" : "Reset",
        "h" : "Reset",
        "c" : "Reset",
        "pv": "Set if parity is even"
      }
    },
    {
      "name" : "xor a, (ix/y+d)",
      "description" : "`a = a XOR (ix/y+d)`",
      "tstates" : 19,
      "bytes" : 2,
      "flags" : {
        "z" : "Set if result is 0",
        "n" : "Reset",
        "h" : "Reset",
        "c" : "Reset",
        "pv": "Set if parity is even"
      }
    },
    {
      "name" : "xor a, n",
      "description" : "`a = a XOR n`",
      "tstates" : 7,
      "bytes" : 2,
      "flags" : {
        "z" : "Set if result is 0",
        "n" : "Reset",
        "h" : "Reset",
        "c" : "Reset",
        "pv": "Set if parity is even"
      }
    },
    {
      "name" : "xor a, r8",
      "description" : "`a = a XOR r8`",
      "tstates" : 4,
      "bytes" : 1,
      "flags" : {
        "z" : "Set if result is 0",
        "n" : "Reset",
        "h" : "Reset",
        "c" : "Reset",
        "pv": "Set if parity is even"
      }
    }
  ]
}